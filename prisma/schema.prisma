generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin_users {
  id           String   @id
  username     String   @unique
  passwordHash String
  role         String
  createdAt    DateTime @default(now())
}

model entrants {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String    @unique
  phone       String?
  dateOfBirth DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
  entries     entries[]

  @@index([firstName, lastName])
  @@index([createdAt])
}

model entries {
  id              String          @id
  eventId         Int
  entrantId       Int
  createdAt       DateTime        @default(now())
  packageEntryNum Int?
  packageId       Int?
  entrants        entrants        @relation(fields: [entrantId], references: [id])
  events          events          @relation(fields: [eventId], references: [id], onDelete: Cascade)
  entry_packages  entry_packages? @relation(fields: [packageId], references: [id])
  prizes          prizes?

  @@index([entrantId])
  @@index([eventId])
  @@index([packageId])
  @@index([createdAt])
  @@index([eventId, createdAt])
}

model entry_packages {
  id        Int       @id @default(autoincrement())
  eventId   Int
  quantity  Int
  cost      Float
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime
  entries   entries[]
  events    events    @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@index([eventId])
}

model events {
  id             Int              @id @default(autoincrement())
  name           String
  description    String?
  date           DateTime?
  drawTime       String?
  entryCost      Float            @default(0)
  prizePool      Float?           
  status         EventStatus      @default(DRAFT)
  drawnAt        DateTime?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime
  entries        entries[]
  entry_packages entry_packages[]
  prizes         prizes[]
  
  @@index([status])
  @@index([createdAt])
  @@index([drawnAt])
  @@index([date])
}

model prizes {
  id             Int      @id @default(autoincrement())
  eventId        Int
  name           String
  description    String?
  order          Int      @default(0)
  winningEntryId String?  @unique
  createdAt      DateTime @default(now())
  updatedAt      DateTime
  events         events   @relation(fields: [eventId], references: [id], onDelete: Cascade)
  entries        entries? @relation(fields: [winningEntryId], references: [id])

  @@index([eventId])
}

enum EventStatus {
  DRAFT
  OPEN
  CLOSED
  DRAWN
}
